#!/usr/bin/python
import argparse
import os,sys,inspect
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
#sys.path.insert(0,parentdir) 

print("bin_make_test_bench", currentdir)

from  vhdl_build_system.vhdl_parser                import *
from  vhdl_build_system.vhdl_get_dependencies      import *
from  vhdl_build_system.vhdl_get_entity_def        import *
from  vhdl_build_system.vhdl_get_type_def_from_db  import *
from  vhdl_build_system.vhdl_make_stand_alone_impl import *
from  vhdl_build_system.vhdl_make_test_bench       import *
from  vhdl_build_system.vhdl_entity2FileName       import *
from  vhdl_build_system.vhdl_entity_class          import *


def main():
    parser = argparse.ArgumentParser(description='Creates Test benches for a given entity')
    parser.add_argument('--OutputPath', help='Path to where the test bench should be created',default="firmware-ethernet/tests/tb3")
    parser.add_argument('--EntityName', help='Name of the entity Test bench',default="axistreamthrottle")
    parser.add_argument('--NumberOfRows', help='Number of Rows in the Autogenerated CSV Files',default="1000")

    args = parser.parse_args()
    
    cwd = os.getcwd()
    print(cwd)
    
    
    InputFile = entity2FileName(args.EntityName)
    NumberOfRows = int(args.NumberOfRows)
    entityDef = vhdl_get_entity_def(InputFile)
    entetyCl  =  vhdl_entity(entityDef[0])
    
    ParsedFile = vhdl_parser(InputFile)

    make_package_file(entetyCl,"none","write",ParsedFile["packageUSE"], args.OutputPath)
    make_package_file(entetyCl,"out","read",ParsedFile["packageUSE"], args.OutputPath)

    make_read_entity(entetyCl,args.OutputPath)
    make_write_entity(entetyCl,args.OutputPath)
    make_test_bench_for_test_cases(entetyCl,args.OutputPath)
    sim_in_filename = args.OutputPath+"/"+get_test_bench_file_basename(entetyCl)+".csv"
    
    make_sim_csv_file(entetyCl,sim_in_filename,"out",NrOfEntires=NumberOfRows)
    sim_out_filename = args.OutputPath+"/"+get_test_bench_file_basename(entetyCl)+"_out.csv"
    make_sim_csv_file(entetyCl,sim_out_filename,"none",NrOfEntires=NumberOfRows)
    
    make_xml_test_case(entetyCl,args.OutputPath)
    make_stand_alone_impl( entityDef = entetyCl , path = args.OutputPath, suffix= "")


if __name__== "__main__":
    main()



    